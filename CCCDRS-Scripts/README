The optimization "pipeline" that we use is as follows:

1. In the directory Full SIMBA Strategies, run octave-cli Main.m at the command
   line. This will use the parameter set and cost model defined in Setup.m to
   produce an initial SIMBA strategy and permutation, saved in Parameters.mat

2. After copying Parameters.mat into Bound Vector/ run Main.m in Matlab to
   obtain a bound vector, saved in BoundVector.mat. This script requires CVX to
   be installed.

3. After copying BoundVector.mat to Strategies/ run octave-cli Main.m at the
   command line to get a full parameter set, saved in FullParameterSet.mat

4. After copying FullParameterSet.mat to Header Generation, run octave-cli
   SIMBA_WIDHDUMMY_2.m to get a header file for the CCCDRS implementation.

Alternatively, in the directory All, you can run Main.m in Matlab. It requires
CVX and GLPK. This script has not been well-tested.

To use the new header file, copy it into CCCDRS-3/inc/fp512/ and recompile using
the TYPE=WITHDUMMY_2 option. Note that header files generated by our scripts use
different versions of inc/fp512/addc.h and lib/action_simba_withdummy_2.c than
are provided by the original CCCDRS implementation, so it is important to use
the ones provided with this code.

